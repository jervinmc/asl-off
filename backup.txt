import 'dart:async';

import 'package:agora_rtc_engine/rtc_engine.dart';
import 'package:agora_rtc_engine/rtc_local_view.dart' as RtcLocalView;
import 'package:agora_rtc_engine/rtc_remote_view.dart' as RtcRemoteView;
import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:camera/camera.dart';
import 'dart:io' as io;
import 'package:tflite/tflite.dart';

const appId = "9068b160533c425bbe81f1a70594a26f";
const token =
    "007eJxTYHD+NWkCk2SymUHpgz8h9VH8j3ZpROeJ8IToz5v1ePc9X2YFBksDM4skQzMDU2PjZBMj06SkVAvDNMNEcwNTS5NEI7O0bf2PkxsCGRm6Vu5jYWSAQBCfiaHMkIEBAIQpHUE=";
const channel = "v1";

class VideoCall extends StatefulWidget {
  final List<CameraDescription> cameras;
  VideoCall(this.cameras);

  @override
  _VideoCallState createState() => _VideoCallState();
}

class _VideoCallState extends State<VideoCall> {
  
  var detected = '';
  var valueList = [{"value":"A","translate":"Hello"},{"value":"B","translate":"How are you"},{"value":"C","translate":"I'm Fine"},{"value":"D","translate":"Means"},{"value":"E","translate":"Excuse Me"},{"value":"F","translate":"My"},{"value":"G","translate":"Name"},{"value":"H","translate":"Nice"},{"value":"I","translate":"To meet you"},{"value":"J","translate":"Thank you"},{"value":"K","translate":"Thank you"},{"value":"L","translate":"What"},{"value":"M","translate":"What's up"},{"value":"N","translate":"From Where"},{"value":"O","translate":"You"}];
  //   bool isDetecting = false;
  // var strin = 'test';
  // late CameraController controller;
  // int? _remoteUid;
  // bool _localUserJoined = false;
  // late RtcEngine _engine;
  // List japanese = [{"convert":"bangus","value":"Me"},{"convert":"Spring Onion","value":"You"}];

  // void initState() {
  //   super.initState();

  //   // if (cameras == null || cameras.length < 1) {
  //   //   print('No camera is found');
  //   // } else {
  //   //   controller = new CameraController(
  //   //     cameras[0],
  //   //     ResolutionPreset.high,
  //   //   );
  //   //   controller.initialize().then((_) {

  //   //   });
  //   // }

  //   loadCamera();
  //   //Videocall Frame
  //   // initAgora();

  // }
  // loadCamera(){
  //   if (widget.cameras == null || widget.cameras.length < 1) {
  //     print('No camera is found');
  //   } else {
  //     loadMyModel();
  //     // print(widget.cameras.length);
  //     controller = new CameraController(
  //       widget.cameras[0],
  //       ResolutionPreset.high,
  //     );
  //     controller.initialize().then((_) {
  //       if (!mounted) {
  //         return;
  //       }
  //       setState(() {});
  //       controller.startImageStream((CameraImage img) {
  //         if (true) {
  //           isDetecting = true;
  //           int startTime = new DateTime.now().millisecondsSinceEpoch;
  //           if (true) {
  //             Tflite.runModelOnFrame(
  //               bytesList: img.planes.map((plane) {
  //                 return plane.bytes;
  //               }).toList(),
  //               imageHeight: img.height,
  //               imageWidth: img.width,
  //               numResults: 2,
  //             ).then((recognitions) {
  //               setState(() {

  //               });
  //               strin = recognitions![0]['label'];
  //               int endTime = new DateTime.now().millisecondsSinceEpoch;
  //               print("Detection took ${endTime - startTime}");
  //               isDetecting = false;
  //               print(recognitions);
  //               // for(int x=0;x<japanese.length;x++){
  //               //   if(recognitions==japanese[x]['convert']){
  //               //     print(japanese[x]['value']);
  //               //   }
  //               // }
  //               setState(() {

  //               });
  //             });
  //           }
  //         }
  //       });
  //     });
  //   }
  // }
  // loadMyModel() async {
  //   var resultant = await Tflite.loadModel(
  //       model: "assets/model_unquant.tflite", labels: "assets/labels.txt");
  // }

  // applyModelOnImage(io.File file) async {
  //   var res = await Tflite.runModelOnImage(
  //       path: file.path,
  //       numResults: 2,
  //       threshold: 0.5,
  //       imageMean: 127.5,
  //       imageStd: 127.5);
  //   print(res);
  //   setState(() {
  //     print(res![0]['label'].toString());
  //   });
  // }

  // Future<void> initAgora() async {
  //   // retrieve permissions
  //   await [Permission.microphone, Permission.camera].request();

  //   //create the engine
  //   _engine = await RtcEngine.create(appId);
  //   await _engine.enableVideo();
  //   _engine.setEventHandler(
  //     RtcEngineEventHandler(
  //       joinChannelSuccess: (String channel, int uid, int elapsed) {
  //         print("okatyy121231231");
  //         // print("local user $uid joined");
  //         setState(() {
  //           _localUserJoined = true;
  //         });
  //       },
  //       userJoined: (int uid, int elapsed) {
  //         // print("remote user $uid joined");
  //         setState(() {
  //           _remoteUid = uid;
  //         });
  //       },
  //       userOffline: (int uid, UserOfflineReason reason) {
  //         print("remote user $uid left channel");
  //         setState(() {
  //           _remoteUid = null;
  //         });
  //       },
  //     ),
  //   );
  //   // await _engine.setClientRole(role: ClientRoleType.clientRoleBroadcaster);
  //   await _engine.enableVideo();
  //   await _engine.startPreview();
  //   await _engine.joinChannel(token, channel, null, 0);
  //    loadCamera();
  // }
  late CameraController controller;
  bool isDetecting = false;
  bool tfLoaded = false;

  @override
  void initState() {
    super.initState();
    loadTensorFlow();
    loadCamera();
  }

  void loadCamera() {
    if (widget.cameras == null || widget.cameras.length < 1) {
      print('No camera is found');
    } else {
      controller = CameraController(widget.cameras[1], ResolutionPreset.high);
      controller.initialize().then((_) {
        if (!mounted) return;
        setState(() {});

        controller.startImageStream((CameraImage img) {
          if (isDetecting) return;
          if (!tfLoaded) return;
          isDetecting = true;
          try {
            int startTime = new DateTime.now().millisecondsSinceEpoch;
            Tflite.runModelOnFrame(
                    bytesList: img.planes.map((plane) {
                      print(img.height);
                      return plane.bytes;
                    }).toList(),
                    imageHeight: img.height,
                    imageWidth: img.width,
                    imageMean: 127.5, // defaults to 127.5
                    imageStd: 127.5, // defaults to 127.5
                    rotation: 0, // defaults to 90, Android only
                    numResults: 2, // defaults to 5
                    threshold: 0.1, // defaults to 0.1
                    asynch: true // defaults to true
                    )
                .then((recognitions) {
              // print("Recognitions: $recognitions");
              for(int x = 0;x<valueList.length;x++){
                print("${valueList[x]['value']} YEEEEEEEEEEEEEEEE");
                print("${recognitions![0]['label']} YEEEEEEEEEEEEEEEE1231231");
                if(valueList[x]['value']==recognitions![0]['label'] ){
                  print("${valueList[x]['value']} HAHAHAHAHAHAHAHAHA");
                  detected = valueList[x]['translate'].toString();
                }
              }
              
              print('OKAYYYY ${detected}');
              print(
                  "Detection took ${new DateTime.now().millisecondsSinceEpoch - startTime}");
              isDetecting = false;
              setState(() {
                
              });
            });
          } catch (e) {
            print(e);
            isDetecting = false;
          }
        });
      });
    }
  }

  @override
  void dispose() {
    controller?.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    if (!controller.value.isInitialized) {
      return Container();
    }
    return Scaffold(
      appBar: AppBar(title: Text('okay'),),
      body: Column(
        children: [
          AspectRatio(
        aspectRatio: controller.value.aspectRatio,
        child: CameraPreview(controller)),
        Text('detected ${detected}')
        ],
      )
    );
  }

  // Load model and labels
  loadTensorFlow() async {
    var resultant = await Tflite.loadModel(
        model: "assets/model_unquant.tflite", labels: "assets/labels.txt");
    setState(() {
      if (resultant != null) {
        tfLoaded = true;
      }
    });
  }
}

@override
Widget build(BuildContext context) {
  return Scaffold(
    appBar: AppBar(
      backgroundColor: Color(0xffef5777),
      title: Text('Video Cal'),
    ),
    body: Stack(
      children: [
        // Center(
        //   child: _remoteVideo(),
        // ),
        // Align(
        //   alignment: Alignment.topLeft,
        //   child: Container(
        //     width: 100,
        //     height: 150,
        //     child: Center(
        //       child: _localUserJoined
        //           ? RtcLocalView.SurfaceView()
        //           : CircularProgressIndicator(),
        //     ),
        //   ),
        // ),
      ],
    ),
  );
}

// Widget _remoteVideo() {
//   if (_remoteUid != null) {
//     return RtcRemoteView.SurfaceView(
//       uid: _remoteUid!,
//       channelId: channel,
//     );
//   } else {
//     return Text(
//       'Please wait for remote user to join',
//       textAlign: TextAlign.center,
//     );
//   }
// }
